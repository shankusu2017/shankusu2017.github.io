<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ebpf on Golang入门指南</title>
    <link>http://shanks.link/categories/ebpf/</link>
    <description>Recent content in Ebpf on Golang入门指南</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 25 Aug 2023 14:18:00 +0800</lastBuildDate>
    <atom:link href="http://shanks.link/categories/ebpf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【BPF入门系列-11】EBFP 和 GO 之初探编程</title>
      <link>http://shanks.link/blog/2023/08/25/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11ebfp-%E5%92%8C-go-%E4%B9%8B%E5%88%9D%E6%8E%A2%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Fri, 25 Aug 2023 14:18:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/25/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11ebfp-%E5%92%8C-go-%E4%B9%8B%E5%88%9D%E6%8E%A2%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/&#34;&gt;深入浅出 eBPF&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文地址：https://www.ebpf.top/post/head_first_bpf&lt;/p&gt;&#xA;&lt;p&gt;eBPF 从创建开始，短短数年（7年），至今就已经被认为是过去 50 年来操作系统最大的变更，那么 eBPF 技术到底给我们带来了什么样的超能力，以至于得到如此高的评价？ 本文从以下内容入手，对 eBPF 技术进行了全面的概述：&lt;/p&gt;</description>
    </item>
    <item>
      <title>BPF BTF 详解</title>
      <link>http://shanks.link/blog/2023/08/25/bpf-btf-%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 25 Aug 2023 11:56:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/25/bpf-btf-%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/&#34;&gt;深入浅出 eBPF&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文地址：https://www.ebpf.top/post/kernel_btf/&lt;/p&gt;&#xA;&lt;p&gt;英文文档：https://www.kernel.org/doc/html/latest/bpf/btf.html&lt;/p&gt;</description>
    </item>
    <item>
      <title>【BPF入门系列-11】EBFP 和 GO 之初探编程</title>
      <link>http://shanks.link/blog/2023/08/25/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11ebfp-%E5%92%8C-go-%E4%B9%8B%E5%88%9D%E6%8E%A2%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Fri, 25 Aug 2023 11:55:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/25/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11ebfp-%E5%92%8C-go-%E4%B9%8B%E5%88%9D%E6%8E%A2%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;p&gt;原文地址：https://networkop.co.uk/post/2021-03-ebpf-intro/&lt;/p&gt;&#xA;&lt;p&gt;本站相关文档：&lt;a href=&#34;https://www.ebpf.top/post/ebpf_go/&#34;&gt;使用 Go 语言管理和分发 ebpf 程序&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>基于 eBPF 的网络监测实践</title>
      <link>http://shanks.link/blog/2023/08/24/%E5%9F%BA%E4%BA%8E-ebpf-%E7%9A%84%E7%BD%91%E7%BB%9C%E7%9B%91%E6%B5%8B%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 24 Aug 2023 17:36:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/%E5%9F%BA%E4%BA%8E-ebpf-%E7%9A%84%E7%BD%91%E7%BB%9C%E7%9B%91%E6%B5%8B%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/&#34;&gt;深入浅出 eBPF&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/&#34;&gt;首页&lt;/a&gt; &lt;a href=&#34;https://www.ebpf.top/what-is-ebpf/&#34;&gt;eBPF 技术报告&lt;/a&gt; &lt;a href=&#34;https://www.ebpf.top/about/&#34;&gt;关于&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文地址：https://www.ebpf.top/post/ebpf_network_exporter&lt;/p&gt;&#xA;&lt;p&gt;公有云网络问题，是一个老生常谈的事情了。今天主要简单说明下，在内网环境下去分析 &amp;amp; 定位这个问题。也并不是一开始就需要 eBPF 加持的，可以从简单的基础工具到监控配合去相关比较快速的定位问题，解决问题。下面会从发现问题到一步步配合使用 Or 开发一些简单的东西去解决问题的大致思路。&lt;/p&gt;</description>
    </item>
    <item>
      <title>【BPF入门系列-11】使用 eBPF 技术跟踪 Netfilter 数据流过滤结果</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11%E4%BD%BF%E7%94%A8-ebpf-%E6%8A%80%E6%9C%AF%E8%B7%9F%E8%B8%AA-netfilter-%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BF%87%E6%BB%A4%E7%BB%93%E6%9E%9C/</link>
      <pubDate>Thu, 24 Aug 2023 17:26:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11%E4%BD%BF%E7%94%A8-ebpf-%E6%8A%80%E6%9C%AF%E8%B7%9F%E8%B8%AA-netfilter-%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BF%87%E6%BB%A4%E7%BB%93%E6%9E%9C/</guid>
      <description>&lt;h2 id=&#34;网络层数据流向与-netfilter-体系&#34;&gt;网络层数据流向与 Netfilter 体系&lt;/h2&gt;&#xA;&lt;p&gt;图 1-1 为网络层内核收发核心流程图，在函数流程图中我们可以看到 &lt;code&gt;Netfliter&lt;/code&gt; 在其中的位置（图中深色底纹圆角矩形）。图中对应的 &lt;code&gt;hook&lt;/code&gt; 点有 5 个，每个&lt;code&gt;hook&lt;/code&gt; 点中保存一组按照优先级排序的函数列表：&lt;/p&gt;</description>
    </item>
    <item>
      <title>【BPF入门系列-10】使用 tracepoint 跟踪文件 open 系统调用</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-10%E4%BD%BF%E7%94%A8-tracepoint-%E8%B7%9F%E8%B8%AA%E6%96%87%E4%BB%B6-open-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link>
      <pubDate>Thu, 24 Aug 2023 16:35:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-10%E4%BD%BF%E7%94%A8-tracepoint-%E8%B7%9F%E8%B8%AA%E6%96%87%E4%BB%B6-open-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</guid>
      <description>&lt;h2 id=&#34;什么是-tracepoint&#34;&gt;什么是 tracepoint&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;tracepoint&lt;/code&gt; 的介绍可以参见 &lt;a href=&#34;https://www.kernel.org/doc/html/latest/trace/tracepoints.html&#34;&gt;Kernel 文档这里&lt;/a&gt;。从 Linux 内核 4.7 开始，eBPF 程序可以挂载到内核跟踪点 &lt;code&gt;tracepoint&lt;/code&gt;。在此之前，要完成内核中函数跟踪的工作，只能用 &lt;code&gt;kprobes/kretprobe&lt;/code&gt; 等方式挂载到导出的内核函数（参见 &lt;code&gt;/proc/kallsyms&lt;/code&gt;），正如我们前几篇文章跟踪 &lt;code&gt;open&lt;/code&gt; 系统调用方式那样。尽管 &lt;code&gt;kprobes&lt;/code&gt; 可以达到跟踪的目的，但存在很多不足：&lt;/p&gt;</description>
    </item>
    <item>
      <title>【BPF入门系列-9】文件打开记录结果跟踪篇</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-9%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E8%B7%9F%E8%B8%AA%E7%AF%87/</link>
      <pubDate>Thu, 24 Aug 2023 16:31:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-9%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E8%B7%9F%E8%B8%AA%E7%AF%87/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;在&lt;a href=&#34;https://www.ebpf.top/post/ebpf_trace_file_open_perf_output/&#34;&gt;上篇文章&lt;/a&gt;中我们为文件 &lt;code&gt;open&lt;/code&gt;系统调用采用了 &lt;code&gt;perf_event&lt;/code&gt; 的方式将数据从内核上报至用户程序。但是到目前为止，我们只是实现了文件打开记录的跟踪，并没有对文件访问的结果是成功还是失败进行展示。&lt;/p&gt;</description>
    </item>
    <item>
      <title>【BPF入门系列-8】文件打开记录跟踪之 perf_event 篇</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-8%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E8%B7%9F%E8%B8%AA%E4%B9%8B-perf_event-%E7%AF%87/</link>
      <pubDate>Thu, 24 Aug 2023 16:27:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-8%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E8%B7%9F%E8%B8%AA%E4%B9%8B-perf_event-%E7%AF%87/</guid>
      <description>&lt;h2 id=&#34;ebpf_perf_output-介绍&#34;&gt;ebpf_perf_output 介绍&lt;/h2&gt;&#xA;&lt;p&gt;在上一篇 &lt;a href=&#34;https://www.ebpf.top/post/ebpf_trace_file_open/&#34;&gt;”使用 ebpf 实时持续跟踪进程文件记录“ &lt;/a&gt;中，我们简单介绍了使用 eBPF 跟踪文件打开记录的跟踪。为了简单演示功能，我们直接使用了 &lt;code&gt;bpf_trace_printk&lt;/code&gt; 进行演示，正如上文所述，&lt;code&gt;bpf_trace_printk&lt;/code&gt; 存在一些限制：&lt;/p&gt;</description>
    </item>
    <item>
      <title>【BPF入门系列-7】使用 ebpf 实时持续跟踪进程文件记录</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-7%E4%BD%BF%E7%94%A8-ebpf-%E5%AE%9E%E6%97%B6%E6%8C%81%E7%BB%AD%E8%B7%9F%E8%B8%AA%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Thu, 24 Aug 2023 16:20:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-7%E4%BD%BF%E7%94%A8-ebpf-%E5%AE%9E%E6%97%B6%E6%8C%81%E7%BB%AD%E8%B7%9F%E8%B8%AA%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/&#34;&gt;深入浅出 eBPF&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;本文主要用于演示基于 ebpf 技术来实现对于系统调用跟踪和特定条件过滤，实现基于 &lt;a href=&#34;https://github.com/iovisor/bcc/&#34;&gt;BCC&lt;/a&gt; 的 Python 前端绑定，过程中对于代码的实现进行了详细的解释，可以作为学习 ebpf 技术解决实际问题的参考样例。&lt;/p&gt;</description>
    </item>
    <item>
      <title>【BPF入门系列-6】BPF 环形缓冲区</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-6bpf-%E7%8E%AF%E5%BD%A2%E7%BC%93%E5%86%B2%E5%8C%BA/</link>
      <pubDate>Thu, 24 Aug 2023 16:18:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-6bpf-%E7%8E%AF%E5%BD%A2%E7%BC%93%E5%86%B2%E5%8C%BA/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/&#34;&gt;深入浅出 eBPF&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;译者：范彬 原文地址：&lt;a href=&#34;https://nakryiko.com/posts/bpf-ringbuf/&#34;&gt;BPF ring buffer&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;当前 perf 缓冲区已成为从内核向用户空间发送数据的标准。BPF 环形缓冲区是一个新的BPF数据结构，解决了 BPF perf 缓冲区内存效率和事件重新排序的问题，同时性能达到或超过了 perf 缓冲区。 它既提供了与 perfbuf 兼容的功能，可轻松进行移植，又提供了具有更好可用性的新的 reserve / commit API。 综合基准和实际基准均表明，几乎所有情况下都应考虑将 BPF 环形缓冲区作为从 BPF 程序向用户空间发送数据的默认选择。&lt;/p&gt;</description>
    </item>
    <item>
      <title>聊聊对 BPF 程序至关重要的 vmlinux.h 文件</title>
      <link>http://shanks.link/blog/2023/08/24/%E8%81%8A%E8%81%8A%E5%AF%B9-bpf-%E7%A8%8B%E5%BA%8F%E8%87%B3%E5%85%B3%E9%87%8D%E8%A6%81%E7%9A%84-vmlinux.h-%E6%96%87%E4%BB%B6/</link>
      <pubDate>Thu, 24 Aug 2023 16:15:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/%E8%81%8A%E8%81%8A%E5%AF%B9-bpf-%E7%A8%8B%E5%BA%8F%E8%87%B3%E5%85%B3%E9%87%8D%E8%A6%81%E7%9A%84-vmlinux.h-%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h2 id=&#34;11-前言&#34;&gt;1.1 前言&lt;/h2&gt;&#xA;&lt;p&gt;eBPF 是一项令人兴奋的强大技术，其允许开发者在 Linux 内核的核心处添加自定义代码功能，并且我们还可以通过编写简单的 C 或 Go 程序与加载到内核中的 eBPF 程序交互，用于加载或读取数据。运行在内核中的 BPF 程序可以检查所附加进程（或内核模块）的内存数据。为此，eBPF 程序需要确切了解处理涉及的数据结构类型，这可以通过 &lt;code&gt;#include &amp;quot;vmlinux.h&amp;quot;&lt;/code&gt; 实现。在本中，我将详细介绍 &lt;code&gt;vmlinux.h&lt;/code&gt; 是什么以及为什么你在编写 eBPF 程序开始就应该使用它。&lt;/p&gt;</description>
    </item>
    <item>
      <title>揭秘 BPF map 前生今世</title>
      <link>http://shanks.link/blog/2023/08/24/%E6%8F%AD%E7%A7%98-bpf-map-%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/</link>
      <pubDate>Thu, 24 Aug 2023 16:03:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/%E6%8F%AD%E7%A7%98-bpf-map-%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/</guid>
      <description>&lt;p&gt;本文地址：https://www.ebpf.top/post/map_internal&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-前言&#34;&gt;1. 前言&lt;/h2&gt;&#xA;&lt;p&gt;众所周知，map 可用于内核 BPF 程序和用户应用程序之间实现双向的数据交换， 为 BPF 技术中的重要基础数据结构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>eBPF 概述：第 5 部分：跟踪用户进程</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-5-%E9%83%A8%E5%88%86%E8%B7%9F%E8%B8%AA%E7%94%A8%E6%88%B7%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Thu, 24 Aug 2023 15:53:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-5-%E9%83%A8%E5%88%86%E8%B7%9F%E8%B8%AA%E7%94%A8%E6%88%B7%E8%BF%9B%E7%A8%8B/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ebpf.top/post/ebpf-overview-part-5/&#34;&gt;https://www.ebpf.top/post/ebpf-overview-part-5/&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;原文地址：https://www.collabora.com/news-and-blog/blog/2019/05/14/an-ebpf-overview-part-5-tracing-user-processes/&lt;/p&gt;</description>
    </item>
    <item>
      <title>eBPF 概述：第 4 部分：在嵌入式系统运行</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-4-%E9%83%A8%E5%88%86%E5%9C%A8%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C/</link>
      <pubDate>Thu, 24 Aug 2023 15:43:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-4-%E9%83%A8%E5%88%86%E5%9C%A8%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C/</guid>
      <description>&lt;p&gt;原文地址：https://www.collabora.com/news-and-blog/blog/2019/05/06/an-ebpf-overview-part-4-working-with-embedded-systems/&lt;/p&gt;</description>
    </item>
    <item>
      <title>eBPF 概述：第 3 部分：软件开发生态</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-3-%E9%83%A8%E5%88%86%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%94%9F%E6%80%81/</link>
      <pubDate>Thu, 24 Aug 2023 15:35:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-3-%E9%83%A8%E5%88%86%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%94%9F%E6%80%81/</guid>
      <description>&lt;p&gt;原文地址：https://www.collabora.com/news-and-blog/blog/2019/04/26/an-ebpf-overview-part-3-walking-up-the-software-stack/&lt;/p&gt;</description>
    </item>
    <item>
      <title>eBPF 概述：第 2 部分：机器和字节码</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-2-%E9%83%A8%E5%88%86%E6%9C%BA%E5%99%A8%E5%92%8C%E5%AD%97%E8%8A%82%E7%A0%81/</link>
      <pubDate>Thu, 24 Aug 2023 15:33:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-2-%E9%83%A8%E5%88%86%E6%9C%BA%E5%99%A8%E5%92%8C%E5%AD%97%E8%8A%82%E7%A0%81/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;原文地址：https://www.collabora.com/news-and-blog/blog/2019/04/15/an-ebpf-overview-part-2-machine-and-bytecode/&lt;/p&gt;</description>
    </item>
    <item>
      <title>eBPF 概述：第 1 部分：介绍</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-1-%E9%83%A8%E5%88%86%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 24 Aug 2023 15:31:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-1-%E9%83%A8%E5%88%86%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.ebpf.top/post/ebpf-overview-part-5/&#34;&gt;https://www.ebpf.top/post/ebpf-overview-part-5/&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;原文地址：https://www.collabora.com/news-and-blog/blog/2019/04/05/an-ebpf-overview-part-1-introduction/&lt;/p&gt;</description>
    </item>
    <item>
      <title>ebpf常用资料查询</title>
      <link>http://shanks.link/blog/2023/08/18/ebpf%E5%B8%B8%E7%94%A8%E8%B5%84%E6%96%99%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Fri, 18 Aug 2023 11:38:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/18/ebpf%E5%B8%B8%E7%94%A8%E8%B5%84%E6%96%99%E6%9F%A5%E8%AF%A2/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;内核 API 支持 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/bpf.2.html&#34;&gt;https://man7.org/linux/man-pages/man2/bpf.2.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;libbpf git 仓库 &lt;a href=&#34;https://github.com/libbpf/libbpf-bootstrap&#34;&gt;https://github.com/libbpf/libbpf-bootstrap&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;bpf 开发指南 &lt;a href=&#34;https://github.com/eunomia-bpf/bpf-developer-tutorial&#34;&gt;https://github.com/eunomia-bpf/bpf-developer-tutorial&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;bpf 其它人收集的资料网址 &lt;a href=&#34;https://github.com/gojue/ebpf-slide&#34;&gt;https://github.com/gojue/ebpf-slide&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;基于 ebpf 的 nat 仓库 &lt;a href=&#34;https://github.com/Netopian/natbee&#34;&gt;https://github.com/Netopian/natbee&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ebpf入门指南</title>
      <link>http://shanks.link/blog/2023/08/18/ebpf%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 18 Aug 2023 09:37:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/18/ebpf%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;导言：eBPF 源于 BPF，本质上是处于内核中的一个高效与灵活的虚类虚拟机组件，以一种安全的方式在许多内核 hook 点执行字节码。BPF最初的目的是用于高效网络报文过滤，经过重新设计，eBPF 不再局限于网络协议栈，已经成为内核顶级的子系统，演进为一个通用执行引擎。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入浅出 eBPF 技术</title>
      <link>http://shanks.link/blog/2023/08/18/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-ebpf-%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Fri, 18 Aug 2023 09:10:54 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/08/18/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-ebpf-%E6%8A%80%E6%9C%AF/</guid>
      <description>&lt;p&gt;&lt;strong&gt;简介：&lt;/strong&gt; 1 eBPF 介绍eBPF 是革命性技术, 起源于 linux 内核, 能够在操作系统内核中执行沙盒程序。旨在不改变内核源码或加载内核模块的前提下安全便捷的扩展内核能力。1.1 demo 展示demo程序如下：#include &amp;lt;linux/bpf.h&amp;gt; #define SEC(NAME) &lt;strong&gt;attribute&lt;/strong&gt;((section(NAME), used)) SEC(&amp;amp;quot&lt;/p&gt;</description>
    </item>
    <item>
      <title>EPBF 资料汇总</title>
      <link>http://shanks.link/blog/2000/01/01/epbf-%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</link>
      <pubDate>Sat, 01 Jan 2000 09:54:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2000/01/01/epbf-%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ebpf.io/zh-cn/&#34;&gt;https://ebpf.io/zh-cn/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://eunomia.dev/tutorials/&#34;&gt;https://eunomia.dev/tutorials/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/what-is-ebpf/&#34;&gt;https://www.ebpf.top/what-is-ebpf/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/ebpf_intro/&#34;&gt;https://www.ebpf.top/post/ebpf_intro/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/tracee_intro/&#34;&gt;https://www.ebpf.top/post/tracee_intro/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/ebpf_network_traffic_monitor/&#34;&gt;https://www.ebpf.top/post/ebpf_network_traffic_monitor/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/bpf-co-re-btf-libbpf/&#34;&gt;https://www.ebpf.top/post/bpf-co-re-btf-libbpf/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/bpf_core/&#34;&gt;https://www.ebpf.top/post/bpf_core/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/bcc-to-libbpf-guid/&#34;&gt;https://www.ebpf.top/post/bcc-to-libbpf-guid/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/ebpf_network_kpatch_ipvs/&#34;&gt;https://www.ebpf.top/post/ebpf_network_kpatch_ipvs/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/offensive-bpf-bpftrace/&#34;&gt;https://www.ebpf.top/post/offensive-bpf-bpftrace/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/ebpf_network_kpatch_ipvs/&#34;&gt;https://www.ebpf.top/post/ebpf_network_kpatch_ipvs/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/bcc-to-libbpf-guid/&#34;&gt;https://www.ebpf.top/post/bcc-to-libbpf-guid/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ebpf.top/post/ebpf_prog_pid_filter/&#34;&gt;https://www.ebpf.top/post/ebpf_prog_pid_filter/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://davidlovezoe.club/wordpress/archives/901&#34;&gt;https://davidlovezoe.club/wordpress/archives/901&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/378258986&#34;&gt;https://zhuanlan.zhihu.com/p/378258986&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloudnative.to/blog/bpf-intro/&#34;&gt;https://cloudnative.to/blog/bpf-intro/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iovisor/bcc&#34;&gt;https://github.com/iovisor/bcc&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Netopian/natbee&#34;&gt;https://github.com/Netopian/natbee&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zoidyzoidzoid/awesome-ebpf&#34;&gt;https://github.com/zoidyzoidzoid/awesome-ebpf&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/lianhunqianr1/article/details/119363772&#34;&gt;https://blog.csdn.net/lianhunqianr1/article/details/119363772&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.ngui.cc/zz/2197457.html?action=onClick&#34;&gt;https://www.ngui.cc/zz/2197457.html?action=onClick&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://pancakeliu.github.io/2022/04/06/ebpf-network-forward/&#34;&gt;https://pancakeliu.github.io/2022/04/06/ebpf-network-forward/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://nakryiko.com/posts/libbpf-bootstrap/&#34;&gt;https://nakryiko.com/posts/libbpf-bootstrap/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.51cto.com/article/711018.html&#34;&gt;https://www.51cto.com/article/711018.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://davidlovezoe.club/wordpress/archives/901&#34;&gt;https://davidlovezoe.club/wordpress/archives/901&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://davidlovezoe.club/wordpress/archives/937&#34;&gt;https://davidlovezoe.club/wordpress/archives/937&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://libbpf.readthedocs.io/en/latest/libbpf_overview.html#getting-started-with-libbpf&#34;&gt;https://libbpf.readthedocs.io/en/latest/libbpf_overview.html#getting-started-with-libbpf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
