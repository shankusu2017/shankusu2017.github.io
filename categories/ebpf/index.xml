<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ebpf on Golang编程语言知识介绍</title>
    <link>http://shanks.link/categories/ebpf/</link>
    <description>Recent content in ebpf on Golang编程语言知识介绍</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 24 Aug 2023 17:36:00 +0800</lastBuildDate><atom:link href="http://shanks.link/categories/ebpf/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于 eBPF 的网络监测实践</title>
      <link>http://shanks.link/blog/2023/08/24/%E5%9F%BA%E4%BA%8E-ebpf-%E7%9A%84%E7%BD%91%E7%BB%9C%E7%9B%91%E6%B5%8B%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 24 Aug 2023 17:36:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/%E5%9F%BA%E4%BA%8E-ebpf-%E7%9A%84%E7%BD%91%E7%BB%9C%E7%9B%91%E6%B5%8B%E5%AE%9E%E8%B7%B5/</guid>
      <description>深入浅出 eBPF 首页 eBPF 技术报告 关于 本文地址：https://www.ebpf.top/post/ebpf_network_exporter 公有云网</description>
    </item>
    
    <item>
      <title>【BPF入门系列-11】使用 eBPF 技术跟踪 Netfilter 数据流过滤结果</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11%E4%BD%BF%E7%94%A8-ebpf-%E6%8A%80%E6%9C%AF%E8%B7%9F%E8%B8%AA-netfilter-%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BF%87%E6%BB%A4%E7%BB%93%E6%9E%9C/</link>
      <pubDate>Thu, 24 Aug 2023 17:26:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-11%E4%BD%BF%E7%94%A8-ebpf-%E6%8A%80%E6%9C%AF%E8%B7%9F%E8%B8%AA-netfilter-%E6%95%B0%E6%8D%AE%E6%B5%81%E8%BF%87%E6%BB%A4%E7%BB%93%E6%9E%9C/</guid>
      <description>网络层数据流向与 Netfilter 体系 图 1-1 为网络层内核收发核心流程图，在函数流程图中我们可以看到 Netfliter 在其中的位置（图中深色底纹圆角矩形）。图中对应的 hook 点有 5 个</description>
    </item>
    
    <item>
      <title>【BPF入门系列-10】使用 tracepoint 跟踪文件 open 系统调用</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-10%E4%BD%BF%E7%94%A8-tracepoint-%E8%B7%9F%E8%B8%AA%E6%96%87%E4%BB%B6-open-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link>
      <pubDate>Thu, 24 Aug 2023 16:35:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-10%E4%BD%BF%E7%94%A8-tracepoint-%E8%B7%9F%E8%B8%AA%E6%96%87%E4%BB%B6-open-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</guid>
      <description>什么是 tracepoint tracepoint 的介绍可以参见 Kernel 文档这里。从 Linux 内核 4.7 开始，eBPF 程序可以挂载到内核跟踪点 tracepoint。在此之前，要完成内核中函数跟踪的工</description>
    </item>
    
    <item>
      <title>【BPF入门系列-9】文件打开记录结果跟踪篇</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-9%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E8%B7%9F%E8%B8%AA%E7%AF%87/</link>
      <pubDate>Thu, 24 Aug 2023 16:31:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-9%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%9C%E8%B7%9F%E8%B8%AA%E7%AF%87/</guid>
      <description>前言 在上篇文章中我们为文件 open系统调用采用了 perf_event 的方式将数据从内核上报至用户程序。但是到目前为止，我们只是实现了文件打开记录的跟踪，并没有</description>
    </item>
    
    <item>
      <title>【BPF入门系列-8】文件打开记录跟踪之 perf_event 篇</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-8%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E8%B7%9F%E8%B8%AA%E4%B9%8B-perf_event-%E7%AF%87/</link>
      <pubDate>Thu, 24 Aug 2023 16:27:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-8%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E8%AE%B0%E5%BD%95%E8%B7%9F%E8%B8%AA%E4%B9%8B-perf_event-%E7%AF%87/</guid>
      <description>ebpf_perf_output 介绍 在上一篇 ”使用 ebpf 实时持续跟踪进程文件记录“ 中，我们简单介绍了使用 eBPF 跟踪文件打开记录的跟踪。为了简单演示功能，我们直接使用了 bpf_trace_printk 进行演示，</description>
    </item>
    
    <item>
      <title>【BPF入门系列-7】使用 ebpf 实时持续跟踪进程文件记录</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-7%E4%BD%BF%E7%94%A8-ebpf-%E5%AE%9E%E6%97%B6%E6%8C%81%E7%BB%AD%E8%B7%9F%E8%B8%AA%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Thu, 24 Aug 2023 16:20:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-7%E4%BD%BF%E7%94%A8-ebpf-%E5%AE%9E%E6%97%B6%E6%8C%81%E7%BB%AD%E8%B7%9F%E8%B8%AA%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%E8%AE%B0%E5%BD%95/</guid>
      <description>深入浅出 eBPF 本文主要用于演示基于 ebpf 技术来实现对于系统调用跟踪和特定条件过滤，实现基于 BCC 的 Python 前端绑定，过程中对于代码的实现进行了详细的解释，可以</description>
    </item>
    
    <item>
      <title>【BPF入门系列-6】BPF 环形缓冲区</title>
      <link>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-6bpf-%E7%8E%AF%E5%BD%A2%E7%BC%93%E5%86%B2%E5%8C%BA/</link>
      <pubDate>Thu, 24 Aug 2023 16:18:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/bpf%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97-6bpf-%E7%8E%AF%E5%BD%A2%E7%BC%93%E5%86%B2%E5%8C%BA/</guid>
      <description>深入浅出 eBPF 译者：范彬 原文地址：BPF ring buffer 当前 perf 缓冲区已成为从内核向用户空间发送数据的标准。BPF 环形缓冲区是一个新的BPF数据结构，解决了 BPF</description>
    </item>
    
    <item>
      <title>聊聊对 BPF 程序至关重要的 vmlinux.h 文件</title>
      <link>http://shanks.link/blog/2023/08/24/%E8%81%8A%E8%81%8A%E5%AF%B9-bpf-%E7%A8%8B%E5%BA%8F%E8%87%B3%E5%85%B3%E9%87%8D%E8%A6%81%E7%9A%84-vmlinux.h-%E6%96%87%E4%BB%B6/</link>
      <pubDate>Thu, 24 Aug 2023 16:15:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/%E8%81%8A%E8%81%8A%E5%AF%B9-bpf-%E7%A8%8B%E5%BA%8F%E8%87%B3%E5%85%B3%E9%87%8D%E8%A6%81%E7%9A%84-vmlinux.h-%E6%96%87%E4%BB%B6/</guid>
      <description>1.1 前言 eBPF 是一项令人兴奋的强大技术，其允许开发者在 Linux 内核的核心处添加自定义代码功能，并且我们还可以通过编写简单的 C 或 Go 程序与加载到内核中的 eBPF 程</description>
    </item>
    
    <item>
      <title>揭秘 BPF map 前生今世</title>
      <link>http://shanks.link/blog/2023/08/24/%E6%8F%AD%E7%A7%98-bpf-map-%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/</link>
      <pubDate>Thu, 24 Aug 2023 16:03:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/%E6%8F%AD%E7%A7%98-bpf-map-%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96/</guid>
      <description>本文地址：https://www.ebpf.top/post/map_internal 1. 前言 众所周知，map 可用于内核 BPF 程序和用户应用程序之</description>
    </item>
    
    <item>
      <title>eBPF 概述：第 5 部分：跟踪用户进程</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-5-%E9%83%A8%E5%88%86%E8%B7%9F%E8%B8%AA%E7%94%A8%E6%88%B7%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Thu, 24 Aug 2023 15:53:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-5-%E9%83%A8%E5%88%86%E8%B7%9F%E8%B8%AA%E7%94%A8%E6%88%B7%E8%BF%9B%E7%A8%8B/</guid>
      <description>https://www.ebpf.top/post/ebpf-overview-part-5/) 原文地址：https://www.collabora.com/news-and-blog/blog/2019/05/14/an-ebpf-</description>
    </item>
    
    <item>
      <title>eBPF 概述：第 4 部分：在嵌入式系统运行</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-4-%E9%83%A8%E5%88%86%E5%9C%A8%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C/</link>
      <pubDate>Thu, 24 Aug 2023 15:43:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-4-%E9%83%A8%E5%88%86%E5%9C%A8%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C/</guid>
      <description>原文地址：https://www.collabora.com/news-and-blog/blog/2019/05/06/an-ebpf-o</description>
    </item>
    
    <item>
      <title>eBPF 概述：第 3 部分：软件开发生态</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-3-%E9%83%A8%E5%88%86%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%94%9F%E6%80%81/</link>
      <pubDate>Thu, 24 Aug 2023 15:35:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-3-%E9%83%A8%E5%88%86%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%94%9F%E6%80%81/</guid>
      <description>原文地址：https://www.collabora.com/news-and-blog/blog/2019/04/26/an-ebpf-o</description>
    </item>
    
    <item>
      <title>eBPF 概述：第 2 部分：机器和字节码</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-2-%E9%83%A8%E5%88%86%E6%9C%BA%E5%99%A8%E5%92%8C%E5%AD%97%E8%8A%82%E7%A0%81/</link>
      <pubDate>Thu, 24 Aug 2023 15:33:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-2-%E9%83%A8%E5%88%86%E6%9C%BA%E5%99%A8%E5%92%8C%E5%AD%97%E8%8A%82%E7%A0%81/</guid>
      <description>原文地址：https://www.collabora.com/news-and-blog/blog/2019/04/15/an-ebpf-o</description>
    </item>
    
    <item>
      <title>eBPF 概述：第 1 部分：介绍</title>
      <link>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-1-%E9%83%A8%E5%88%86%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 24 Aug 2023 15:31:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/24/ebpf-%E6%A6%82%E8%BF%B0%E7%AC%AC-1-%E9%83%A8%E5%88%86%E4%BB%8B%E7%BB%8D/</guid>
      <description>https://www.ebpf.top/post/ebpf-overview-part-5/) 原文地址：https://www.collabora.com/news-and-blog/blog/2019/04/05/an-ebpf-</description>
    </item>
    
    <item>
      <title>ebpf常用资料查询</title>
      <link>http://shanks.link/blog/2023/08/18/ebpf%E5%B8%B8%E7%94%A8%E8%B5%84%E6%96%99%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Fri, 18 Aug 2023 11:41:53 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/18/ebpf%E5%B8%B8%E7%94%A8%E8%B5%84%E6%96%99%E6%9F%A5%E8%AF%A2/</guid>
      <description>内核 API 支持 https://man7.org/linux/man-pages/man2/bpf.2.html libbpf git 仓库 https://github.com/libbpf/libbpf-bootstrap bpf 开发指南 https://github.com/eunomia-bpf/bpf-developer-tutorial bpf 其它人收集的资料网址 https://github.com/gojue/ebpf-slide 基于 ebpf 的 nat 仓库 https://github.com/Netopian/natbee</description>
    </item>
    
    <item>
      <title>深入浅出 eBPF 技术</title>
      <link>http://shanks.link/blog/2023/08/18/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-ebpf-%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Fri, 18 Aug 2023 11:25:33 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/18/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-ebpf-%E6%8A%80%E6%9C%AF/</guid>
      <description>简介： 1 eBPF 介绍eBPF 是革命性技术, 起源于 linux 内核, 能够在操作系统内核中执行沙盒程序。旨在不改变内核源码或加载内核模块的前提下安全便捷的扩展内</description>
    </item>
    
    <item>
      <title>ebpf入门指南</title>
      <link>http://shanks.link/blog/2023/08/18/ebpf%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 18 Aug 2023 09:37:00 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2023/08/18/ebpf%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
      <description>导言：eBPF 源于 BPF，本质上是处于内核中的一个高效与灵活的虚类虚拟机组件，以一种安全的方式在许多内核 hook 点执行字节码。BPF最初的目的是用</description>
    </item>
    
  </channel>
</rss>
