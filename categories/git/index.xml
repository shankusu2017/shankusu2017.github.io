<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Golang编程语言知识介绍</title>
    <link>http://shanks.link/categories/git/</link>
    <description>Recent content in Git on Golang编程语言知识介绍</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 24 Oct 2022 10:37:52 +0800</lastBuildDate><atom:link href="http://shanks.link/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git 清除历史记录</title>
      <link>http://shanks.link/blog/2022/10/24/git-%E6%B8%85%E9%99%A4%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 24 Oct 2022 10:37:52 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/10/24/git-%E6%B8%85%E9%99%A4%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>Git 清除所有历史记录 1. 进入仓库，拉一个分支比如名为 latest_branch git checkout --orphan latest_branch –orphan 创建一个无任何历史记录的孤儿分支 2. 添加所有文件到上述分支并提交一次 git</description>
    </item>
    
    <item>
      <title>How to fix ‘fatal: refusing to merge unrelated histories’ Git error</title>
      <link>http://shanks.link/blog/2022/10/24/how-to-fix-fatal-refusing-to-merge-unrelated-histories-git-error/</link>
      <pubDate>Mon, 24 Oct 2022 10:02:49 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/10/24/how-to-fix-fatal-refusing-to-merge-unrelated-histories-git-error/</guid>
      <description>What is the ‘fatal: refusing to merge unrelated histories’ error? The fatal: refusing to merge histories error is a fairly common Git error. It appears when a developer tries to merge two unrelated projects into a single branch. This error appears when the branch has its commit histories and tags incompatible with the pull request</description>
    </item>
    
    <item>
      <title>Pushing a branch to Bitbucket fails with the error, &#34;refspec matches more than one&#34;.</title>
      <link>http://shanks.link/blog/2022/10/21/pushing-a-branch-to-bitbucket-fails-with-the-error-refspec-matches-more-than-one./</link>
      <pubDate>Fri, 21 Oct 2022 14:51:23 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/10/21/pushing-a-branch-to-bitbucket-fails-with-the-error-refspec-matches-more-than-one./</guid>
      <description>Summary The error &amp;ldquo;refspec matches more than one&amp;rdquo; is shown while pushing a branch to Bitbucket.
This occurs because there is more than one Git ref that matches the ref name specified in the push command.
Example Suppose a repo has a branch and a tag with the same name, &amp;ldquo;dev&amp;rdquo;.
When an attempt is made to push the &amp;ldquo;dev&amp;rdquo; branch to the remote, the error &amp;ldquo;refspec matches more than one&amp;rdquo; will be shown and the push fails.</description>
    </item>
    
    <item>
      <title>同步master代码到分支</title>
      <link>http://shanks.link/blog/2022/10/14/%E5%90%8C%E6%AD%A5master%E4%BB%A3%E7%A0%81%E5%88%B0%E5%88%86%E6%94%AF/</link>
      <pubDate>Fri, 14 Oct 2022 09:37:59 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/10/14/%E5%90%8C%E6%AD%A5master%E4%BB%A3%E7%A0%81%E5%88%B0%E5%88%86%E6%94%AF/</guid>
      <description>第一步： 如果分支(将此分支暂命名为dev)有修改，则先提交修改的内容，如果没有，直接跳到第二步 git commit -m “fix bug” 第二步： 切换到maste</description>
    </item>
    
    <item>
      <title>将Git存储库从一个平台fork到另外一个平台</title>
      <link>http://shanks.link/blog/2022/10/08/%E5%B0%86git%E5%AD%98%E5%82%A8%E5%BA%93%E4%BB%8E%E4%B8%80%E4%B8%AA%E5%B9%B3%E5%8F%B0fork%E5%88%B0%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Sat, 08 Oct 2022 18:04:20 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/10/08/%E5%B0%86git%E5%AD%98%E5%82%A8%E5%BA%93%E4%BB%8E%E4%B8%80%E4%B8%AA%E5%B9%B3%E5%8F%B0fork%E5%88%B0%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%B9%B3%E5%8F%B0/</guid>
      <description>从github到github 打开你想fork的项目界面，点击fork按钮即可将此项目fork到你的github账户上; 在不同的平台之间for</description>
    </item>
    
    <item>
      <title>Git生成patch和打patch</title>
      <link>http://shanks.link/blog/2022/09/29/git%E7%94%9F%E6%88%90patch%E5%92%8C%E6%89%93patch/</link>
      <pubDate>Thu, 29 Sep 2022 16:21:29 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/09/29/git%E7%94%9F%E6%88%90patch%E5%92%8C%E6%89%93patch/</guid>
      <description>git生成patch和打patch 日常开发与合作过程中，对于code生成patch和打patch(应用patch)成为经常需要做的事情，使用</description>
    </item>
    
    <item>
      <title>git git@github.com: Permission denied (publickey)</title>
      <link>http://shanks.link/blog/2021/12/13/git-git@github.com-permission-denied-publickey/</link>
      <pubDate>Mon, 13 Dec 2021 19:38:35 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2021/12/13/git-git@github.com-permission-denied-publickey/</guid>
      <description>前言 背着 Air，背了好长时间，挤地铁，背着感觉不仅仅是一个 Air，更是希望，压力以及动力。 随着项目一期差不多了，我的 MBP 也该派上用场啦。 早期 LZ</description>
    </item>
    
    <item>
      <title>git查看文件的历史提交信息</title>
      <link>http://shanks.link/blog/2021/12/13/git%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E7%9A%84%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Mon, 13 Dec 2021 10:22:35 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/12/13/git%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E7%9A%84%E5%8E%86%E5%8F%B2%E6%8F%90%E4%BA%A4%E4%BF%A1%E6%81%AF/</guid>
      <description>工作中我们有时候想要查看某一个文件的历史提交版本,] 还想看都修改过那些内容,那么这两个简单的命令就会帮到你了, 话不多说,comeBaby&amp;h</description>
    </item>
    
    <item>
      <title>Git远程仓库地址变更本地如何修改</title>
      <link>http://shanks.link/blog/2021/12/13/git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%E5%8F%98%E6%9B%B4%E6%9C%AC%E5%9C%B0%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Mon, 13 Dec 2021 10:17:13 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/12/13/git%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80%E5%8F%98%E6%9B%B4%E6%9C%AC%E5%9C%B0%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9/</guid>
      <description>公司搬移， 作为git仓库的服务器IP地址变了。 本地代码挺多，重新检出太占时间，可以修改一个什么配置让我本地仓库和新的远程仓库建立关联吗， 答案</description>
    </item>
    
    <item>
      <title>git忽略文件权限和所有者</title>
      <link>http://shanks.link/blog/2021/12/13/git%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E5%92%8C%E6%89%80%E6%9C%89%E8%80%85/</link>
      <pubDate>Mon, 13 Dec 2021 10:15:26 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/12/13/git%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E5%92%8C%E6%89%80%E6%9C%89%E8%80%85/</guid>
      <description>在发布项目到线上时，很多时候需要修改文件的权限，如果是使用git版本管理软件来发布的话，那么下次更新线上文件的时候就会提示文件冲突。明明文件</description>
    </item>
    
    <item>
      <title>git squash用法</title>
      <link>http://shanks.link/blog/2021/12/13/git-squash%E7%94%A8%E6%B3%95/</link>
      <pubDate>Mon, 13 Dec 2021 10:24:32 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2021/12/13/git-squash%E7%94%A8%E6%B3%95/</guid>
      <description>在开发一个功能的时候会反复的提交代码，会造成一个功能有很多次提交，在我们要向master做分支合并的时候，就会出现很多commits，在合并</description>
    </item>
    
    <item>
      <title>git常用命令</title>
      <link>http://shanks.link/blog/2021/10/19/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 19 Oct 2021 11:12:49 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2021/10/19/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>git config # 显示当前的Git配置 $ git config --list # 编辑Git配置文件 $ git config -e [--global] # 设置提交代码时的用户信息 $ git config [--global] user.name &amp;#34;[name]&amp;#34; $ git config [--global] user.email &amp;#34;[email address]&amp;#34; git workflow http://www.ruanyifeng.com/blog/2012/07/git.html http://www.ruanyifeng.com/blog/2015/08/git-use-process.html http://www.ruanyifeng.com/blog/2015/12/git-workflow.html?bsh_bid=2219775734 http://www.ruanyifeng.com/blog/2019/12/git-undo.html 撤销提交 http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html 撰</description>
    </item>
    
    <item>
      <title>Git远程操作详解</title>
      <link>http://shanks.link/blog/2021/07/09/git%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 09 Jul 2021 11:27:46 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/09/git%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C%E8%AF%A6%E8%A7%A3/</guid>
      <description>作者： 阮一峰 日期： 2014年6月12日 Git是目前最流行的版本管理系统，学会Git几乎成了开发者的必备技能。 Git有很多优势，其中之一就是远</description>
    </item>
    
    <item>
      <title>github 慢 github.io 访问不了</title>
      <link>http://shanks.link/blog/2021/05/13/github-%E6%85%A2-github.io-%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86/</link>
      <pubDate>Thu, 13 May 2021 19:04:18 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2021/05/13/github-%E6%85%A2-github.io-%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86/</guid>
      <description>使用国内镜像 ​ 目前已知Github国内镜像网站有 github.com.cnpmjs.org 和 git.sdut.me/ 。速度根据各地情况而定，在clone某个项目的时候将 github.com 替换为 github.com.cnpmjs.org 即可。 使用国外的dns查</description>
    </item>
    
  </channel>
</rss>
