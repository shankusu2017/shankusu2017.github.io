<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openswan on Golang入门指南</title>
    <link>http://shanks.link/categories/openswan/</link>
    <description>Recent content in Openswan on Golang入门指南</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 12 May 2023 10:10:49 +0800</lastBuildDate>
    <atom:link href="http://shanks.link/categories/openswan/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>openswan性能初步分析</title>
      <link>http://shanks.link/blog/2023/05/12/openswan%E6%80%A7%E8%83%BD%E5%88%9D%E6%AD%A5%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 12 May 2023 10:10:49 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/05/12/openswan%E6%80%A7%E8%83%BD%E5%88%9D%E6%AD%A5%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;这里相对openswan的性能做个简单的说明。为什么要介绍这个话题呢？&lt;/p&gt;&#xA;&lt;p&gt;其实最主要的原因还是想openswan的性能到底如何、极限是多少隧道、会有哪些瓶颈等等？ 比如某个项目，客户需要设备支持1000条隧道，那么首先要考虑自己的产品能否支持到这么多？也就是说需要知道自己的实力。如果不考虑这些实际的问题，只一味的接项目，那么最可能的结果就是白白投入这么多的人力物力时间，最终对于公司来说收效甚微。&#xA;&lt;img src=&#34;http://shanks.link/img/ipsec/f04732acf8c04d0fbbfc92f79e1dfa89.jpeg&#34; alt=&#34;请添加图片描述&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
