<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程杂谈 on 愿星光伴你左右</title>
    <link>http://shanks.link/tags/%E7%BC%96%E7%A8%8B%E6%9D%82%E8%B0%88/</link>
    <description>Recent content in 编程杂谈 on 愿星光伴你左右</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 30 Jul 2021 18:17:27 +0000</lastBuildDate><atom:link href="http://shanks.link/tags/%E7%BC%96%E7%A8%8B%E6%9D%82%E8%B0%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux内存管理小结三-其他内存相关知识</title>
      <link>http://shanks.link/blog/2021/07/30/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%B0%8F%E7%BB%93%E4%B8%89-%E5%85%B6%E4%BB%96%E5%86%85%E5%AD%98%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Fri, 30 Jul 2021 18:17:27 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/30/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%B0%8F%E7%BB%93%E4%B8%89-%E5%85%B6%E4%BB%96%E5%86%85%E5%AD%98%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</guid>
      <description>其他内存相关知识——Linux内存管理小结三 【Overcommit和OOM】 ​ 在Unix中，当一个用户进程使用malloc()函数申请内存时</description>
    </item>
    
    <item>
      <title>Linux内存管理小结二-glibc内存管理</title>
      <link>http://shanks.link/blog/2021/07/30/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%B0%8F%E7%BB%93%E4%BA%8C-glibc%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link>
      <pubDate>Fri, 30 Jul 2021 18:14:38 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/30/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%B0%8F%E7%BB%93%E4%BA%8C-glibc%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid>
      <description>glibc内存管理——Linux内存管理小结二 【引言】 最近在生产环境遇到一个奇怪的现象，nginx占用的虚拟内存和物理内存都很高，并且一直不</description>
    </item>
    
    <item>
      <title>Linux内存管理小结一-什么是物理/虚拟/共享内存</title>
      <link>http://shanks.link/blog/2021/07/30/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%B0%8F%E7%BB%93%E4%B8%80-%E4%BB%80%E4%B9%88%E6%98%AF%E7%89%A9%E7%90%86/%E8%99%9A%E6%8B%9F/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</link>
      <pubDate>Fri, 30 Jul 2021 18:10:45 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/30/linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%B0%8F%E7%BB%93%E4%B8%80-%E4%BB%80%E4%B9%88%E6%98%AF%E7%89%A9%E7%90%86/%E8%99%9A%E6%8B%9F/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</guid>
      <description>什么是物理/虚拟/共享内存——Linux内存管理小结一 物理内存和虚拟内存到底有什么区别？ 提到内存，我们会想到经常接触的三个词：虚拟内存、物理</description>
    </item>
    
    <item>
      <title>malloc_stats---检查内存泄露的神器</title>
      <link>http://shanks.link/blog/2021/07/30/malloc_stats---%E6%A3%80%E6%9F%A5%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E7%A5%9E%E5%99%A8/</link>
      <pubDate>Fri, 30 Jul 2021 17:58:40 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/30/malloc_stats---%E6%A3%80%E6%9F%A5%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E7%A5%9E%E5%99%A8/</guid>
      <description>在之前的博客中提到过，valgrind可以用来检测内存泄露，但在使用中，往往会遇到一些问题，给调试工作带来很多不必要的麻烦，我自己遇到的有以</description>
    </item>
    
    <item>
      <title>c运行库、c标准库、windows API的区别和联系</title>
      <link>http://shanks.link/blog/2021/07/30/c%E8%BF%90%E8%A1%8C%E5%BA%93c%E6%A0%87%E5%87%86%E5%BA%93windows-api%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/</link>
      <pubDate>Fri, 30 Jul 2021 17:29:46 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/30/c%E8%BF%90%E8%A1%8C%E5%BA%93c%E6%A0%87%E5%87%86%E5%BA%93windows-api%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/</guid>
      <description>c运行库、c标准库、windows API的区别和联系 C运行时库函数 C运行时库函数是指C语言本身支持的一些基本函数，通常是汇编直接实现的。 AP</description>
    </item>
    
    <item>
      <title>为什么请求时,需要使用URLEncode做encode转码操作</title>
      <link>http://shanks.link/blog/2021/07/30/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B7%E6%B1%82%E6%97%B6%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8urlencode%E5%81%9Aencode%E8%BD%AC%E7%A0%81%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Fri, 30 Jul 2021 17:18:15 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/30/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B7%E6%B1%82%E6%97%B6%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8urlencode%E5%81%9Aencode%E8%BD%AC%E7%A0%81%E6%93%8D%E4%BD%9C/</guid>
      <description>为什么请求时,需使用URLEncode做encode转码操作 为什么要对url进行encode 发现现在几乎所有的网站都对url中的汉字和特殊的</description>
    </item>
    
    <item>
      <title>如何阅读一份源代码?</title>
      <link>http://shanks.link/blog/2021/07/30/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E4%BB%BD%E6%BA%90%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Fri, 30 Jul 2021 17:04:53 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/30/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E4%BB%BD%E6%BA%90%E4%BB%A3%E7%A0%81/</guid>
      <description>如何阅读一份源代码？ CONTENTS 先跑起来调试手段使用顺手的工具情景分析利用好测试用例厘清核心数据结构之间的关系整体和细节多问自己几个问题写自己的代码阅</description>
    </item>
    
    <item>
      <title>字节跳动 Flink 单点恢复功能实践</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8-flink-%E5%8D%95%E7%82%B9%E6%81%A2%E5%A4%8D%E5%8A%9F%E8%83%BD%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 27 Jul 2021 18:21:02 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8-flink-%E5%8D%95%E7%82%B9%E6%81%A2%E5%A4%8D%E5%8A%9F%E8%83%BD%E5%AE%9E%E8%B7%B5/</guid>
      <description>跳动 Flink 单点恢复功能实践 背景 在字节跳动的实时计算场景中，我们有很多任务（数量 2k+）会直接服务于线上，其输出时延和稳定性会直接影响线上产品的用</description>
    </item>
    
    <item>
      <title>Kernel trace tools（三）：中断和软中断关闭时间过长问题追踪</title>
      <link>http://shanks.link/blog/2021/07/27/kernel-trace-tools%E4%B8%89%E4%B8%AD%E6%96%AD%E5%92%8C%E8%BD%AF%E4%B8%AD%E6%96%AD%E5%85%B3%E9%97%AD%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF%E9%97%AE%E9%A2%98%E8%BF%BD%E8%B8%AA/</link>
      <pubDate>Tue, 27 Jul 2021 18:09:23 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/27/kernel-trace-tools%E4%B8%89%E4%B8%AD%E6%96%AD%E5%92%8C%E8%BD%AF%E4%B8%AD%E6%96%AD%E5%85%B3%E9%97%AD%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF%E9%97%AE%E9%A2%98%E8%BF%BD%E8%B8%AA/</guid>
      <description>Kernel trace tools（三）：内核 runqueue 延迟跟踪 本文是由字节跳动系统部 STE 团队出品的“kernel trace tools”系列文章之一，以介绍团队自研多类延迟问题追</description>
    </item>
    
    <item>
      <title>Kernel trace tools（二）：中断和软中断关闭时间过长问题追踪</title>
      <link>http://shanks.link/blog/2021/07/27/kernel-trace-tools%E4%BA%8C%E4%B8%AD%E6%96%AD%E5%92%8C%E8%BD%AF%E4%B8%AD%E6%96%AD%E5%85%B3%E9%97%AD%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF%E9%97%AE%E9%A2%98%E8%BF%BD%E8%B8%AA/</link>
      <pubDate>Tue, 27 Jul 2021 18:03:53 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/27/kernel-trace-tools%E4%BA%8C%E4%B8%AD%E6%96%AD%E5%92%8C%E8%BD%AF%E4%B8%AD%E6%96%AD%E5%85%B3%E9%97%AD%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF%E9%97%AE%E9%A2%98%E8%BF%BD%E8%B8%AA/</guid>
      <description>Kernel trace tools（二）：内核态执行时间跟踪 本文是由字节跳动系统部 STE 团队出品的“kernel trace tools”系列文章之一，以介绍团队自研多类延迟问</description>
    </item>
    
    <item>
      <title>Kernel trace tools（一）：中断和软中断关闭时间过长问题追踪</title>
      <link>http://shanks.link/blog/2021/07/27/kernel-trace-tools%E4%B8%80%E4%B8%AD%E6%96%AD%E5%92%8C%E8%BD%AF%E4%B8%AD%E6%96%AD%E5%85%B3%E9%97%AD%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF%E9%97%AE%E9%A2%98%E8%BF%BD%E8%B8%AA/</link>
      <pubDate>Tue, 27 Jul 2021 17:57:14 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/27/kernel-trace-tools%E4%B8%80%E4%B8%AD%E6%96%AD%E5%92%8C%E8%BD%AF%E4%B8%AD%E6%96%AD%E5%85%B3%E9%97%AD%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF%E9%97%AE%E9%A2%98%E8%BF%BD%E8%B8%AA/</guid>
      <description>kenel trace tools（一）：中断和软中断关闭时间过长问题追踪 本文是由字节跳动系统部 STE 团队出品的 “kernel trace tools” 系列文章，以介绍团队自研</description>
    </item>
    
    <item>
      <title>基于有限状态机与消息队列的三方支付系统补单实践</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%9F%BA%E4%BA%8E%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E4%B8%8E%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E4%B8%89%E6%96%B9%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E8%A1%A5%E5%8D%95%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 27 Jul 2021 17:46:19 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/07/27/%E5%9F%BA%E4%BA%8E%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E4%B8%8E%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E4%B8%89%E6%96%B9%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E8%A1%A5%E5%8D%95%E5%AE%9E%E8%B7%B5/</guid>
      <description>基于有限状态机与消息队列的三方支付系统补单实践 0. 引言 在日常生活中，从线下的超市购物到线上的外卖点餐、电商网购等，支付无时无刻不在发生，不论是</description>
    </item>
    
  </channel>
</rss>
