<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on 愿星光伴你左右</title>
    <link>http://shanks.link/tags/algorithm/</link>
    <description>Recent content in algorithm on 愿星光伴你左右</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 27 Apr 2022 16:31:08 +0800</lastBuildDate><atom:link href="http://shanks.link/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>排序算法</title>
      <link>http://shanks.link/blog/2022/04/27/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 27 Apr 2022 16:31:08 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/04/27/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>排序指的是将一组对象按照某种逻辑重新排列的过程，在计算机早期，大约30%的时间都用在排序上，今天这个比例降低了，这得益于高效的排序算法。排序</description>
    </item>
    
    <item>
      <title>Lru</title>
      <link>http://shanks.link/blog/2022/04/26/lru/</link>
      <pubDate>Tue, 26 Apr 2022 17:00:17 +0800</pubDate>
      
      <guid>http://shanks.link/blog/2022/04/26/lru/</guid>
      <description>原文链接 LRU-least recently used-最近最少使用算法，是一种内存数据淘汰策略，使用常见是当内存不足时，需要淘汰最近最少使用的数据。LRU常用语缓存系统的淘</description>
    </item>
    
    <item>
      <title>数学之美每章小结</title>
      <link>http://shanks.link/blog/2021/10/09/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E%E6%AF%8F%E7%AB%A0%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Sat, 09 Oct 2021 14:59:21 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/10/09/%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E%E6%AF%8F%E7%AB%A0%E5%B0%8F%E7%BB%93/</guid>
      <description>原文链接 书评：本书讲的是道而不是术，真正的术还要自己细致的研究下去，目前看的第一遍总结的不是很好，后面再看会继续完善。 第1章：文字和语言VS</description>
    </item>
    
    <item>
      <title>面试题型系列:滑动窗口技巧</title>
      <link>http://shanks.link/blog/2021/04/29/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%9E%8B%E7%B3%BB%E5%88%97%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 29 Apr 2021 17:52:09 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/04/29/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%9E%8B%E7%B3%BB%E5%88%97%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%8A%80%E5%B7%A7/</guid>
      <description>面试题型系列：滑动窗口技巧 本文是公众号读者上山打老虎的第二篇原创投稿，主要内容是讲解算法技巧之滑动窗口。上山兄一直保持着刷题的习惯，并形成了</description>
    </item>
    
    <item>
      <title>数据库连接池</title>
      <link>http://shanks.link/blog/2021/04/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</link>
      <pubDate>Tue, 27 Apr 2021 11:18:05 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/04/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/</guid>
      <description>数据库连接池 池（Pool）是指某类资源的容器，它是一种用于提高程序效率和降低系统开销的技术，比如线程池、连接池、内存池、对象池。但它们的核心</description>
    </item>
    
    <item>
      <title>万能钥匙中间层</title>
      <link>http://shanks.link/blog/2021/04/26/%E4%B8%87%E8%83%BD%E9%92%A5%E5%8C%99%E4%B8%AD%E9%97%B4%E5%B1%82/</link>
      <pubDate>Mon, 26 Apr 2021 19:13:05 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/04/26/%E4%B8%87%E8%83%BD%E9%92%A5%E5%8C%99%E4%B8%AD%E9%97%B4%E5%B1%82/</guid>
      <description>万能钥匙-中间层 最近小菜刀重读《程序员的自我修养》，里面提到过一句名言：计算机科学领域的任何问题都可以通过增加一个间接的中间层来解决。 上述名</description>
    </item>
    
    <item>
      <title>高并发系统之限流技术</title>
      <link>http://shanks.link/blog/2021/04/26/%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E4%B9%8B%E9%99%90%E6%B5%81%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Mon, 26 Apr 2021 18:19:51 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/04/26/%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E4%B9%8B%E9%99%90%E6%B5%81%E6%8A%80%E6%9C%AF/</guid>
      <description>高并发系统之限流技术 在开发高并发系统时，有三把利器用来保护系统：缓存、降级和限流。限流是指通过对并发访问/请求进行限速或者对一个时间内的的请</description>
    </item>
    
    <item>
      <title>垃圾回收GC浅谈</title>
      <link>http://shanks.link/blog/2021/04/04/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6gc%E6%B5%85%E8%B0%88/</link>
      <pubDate>Sun, 04 Apr 2021 16:30:16 +0000</pubDate>
      
      <guid>http://shanks.link/blog/2021/04/04/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6gc%E6%B5%85%E8%B0%88/</guid>
      <description>原文链接 关于内存 计算机通过两个机制，去实现内存的高效使用。 第一种机制是虚拟内存。硬盘的容量其实是远远大于内存的(RAM)，虚拟内存会在内存不</description>
    </item>
    
  </channel>
</rss>
