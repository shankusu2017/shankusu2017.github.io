<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpu on Golang入门指南</title>
    <link>http://shanks.link/tags/cpu/</link>
    <description>Recent content in Cpu on Golang入门指南</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 28 Apr 2021 11:36:26 +0000</lastBuildDate>
    <atom:link href="http://shanks.link/tags/cpu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CPU缓存体系对程序的影响</title>
      <link>http://shanks.link/blog/2021/04/28/cpu%E7%BC%93%E5%AD%98%E4%BD%93%E7%B3%BB%E5%AF%B9%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BD%B1%E5%93%8D/</link>
      <pubDate>Wed, 28 Apr 2021 11:36:26 +0000</pubDate>
      <guid>http://shanks.link/blog/2021/04/28/cpu%E7%BC%93%E5%AD%98%E4%BD%93%E7%B3%BB%E5%AF%B9%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BD%B1%E5%93%8D/</guid>
      <description>&lt;h2 id=&#34;cpu缓存体系对go程序的影响&#34;&gt;CPU缓存体系对Go程序的影响&lt;/h2&gt;&#xA;&lt;p&gt;小菜刀最近在medium上阅读了一篇高赞文章《Go and CPU Caches》，其地址为&lt;em&gt;&lt;a href=&#34;https://teivah.medium.com/go-and-cpu-caches-af5d32cc5592&#34;&gt;https://teivah.medium.com/go-and-cpu-caches-af5d32cc5592&lt;/a&gt;&lt;/em&gt;，感觉收获颇多。小菜刀在该文章的基础上做了些修改和扩展，整理出来分享给读者朋友们。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;CPU缓存体系&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;现代计算机处理器架构多数采用对称多处理系统（Symmetric multiprocessing system，SMS）。在这个系统中，每一个核心都当成是独立的处理器，多处理器被连接到同一个共享的主存上，并由单一操作系统来控制。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
