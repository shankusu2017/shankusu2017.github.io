<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分布式 on 愿星光伴随你左右</title>
    <link>http://shanks.link/tags/%E5%88%86%E5%B8%83%E5%BC%8F/</link>
    <description>Recent content in 分布式 on 愿星光伴随你左右</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 24 Jan 2024 16:04:20 +0800</lastBuildDate>
    <atom:link href="http://shanks.link/tags/%E5%88%86%E5%B8%83%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分布式系统学习资料汇总</title>
      <link>http://shanks.link/blog/2024/01/24/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</link>
      <pubDate>Wed, 24 Jan 2024 16:04:20 +0800</pubDate>
      <guid>http://shanks.link/blog/2024/01/24/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文首发自公众号：“木鸟杂记”，会不定期更新。欢迎订阅我的分布式系统和数据库专栏：系统日知录，&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//xiaobot.net/p/system-thinking&#34;&gt;https://xiaobot.net/p/system-thinking&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;&#xA;&lt;p&gt;时下，随着通信技术的发展、移动互联网的普及、物联网车联网人工智能的兴起，每天所产生的数据呈爆炸性的增长。这种尺度的数据不是传统单机系统可以独立处理的，而只能借助于大规模的分布式系统，因而分布式系统渐渐的变成一门“显学”。而作为一个分布式系统初学者，面对网上未加归类、浩如烟海的学习资料，很容易两眼抓瞎。&lt;/p&gt;</description>
    </item>
    <item>
      <title>彻底搞懂etcd raft选举、数据同步</title>
      <link>http://shanks.link/blog/2022/12/02/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82etcd-raft%E9%80%89%E4%B8%BE%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Fri, 02 Dec 2022 16:42:24 +0800</pubDate>
      <guid>http://shanks.link/blog/2022/12/02/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82etcd-raft%E9%80%89%E4%B8%BE%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/</guid>
      <description>&lt;h3 id=&#34;etcd-raft选举机制&#34;&gt;etcd raft选举机制&lt;/h3&gt;&#xA;&lt;p&gt;etcd 是一个分布式的k/V存储系统。核心使用了RAFT分布式一致性协议。一致性这个概念，它是指多个&lt;a href=&#34;https://cloud.tencent.com/product/cvm?from=10680&#34;&gt;服务器&lt;/a&gt;在状态达成一致，但是在一个分布式系统中，因为各种意外可能，有的服务器可能会崩溃或变得不可靠，它就不能和其他服务器达成一致状态。这样就需要一种Consensus协议，一致性协议是为了确保容错性，也就是即使系统中有一两个服务器当机，也不会影响其处理过程。&lt;/p&gt;&#xA;&lt;p&gt;为了以容错方式达成一致，我们不可能要求所有服务器100%都达成一致状态，只要超过半数的大多数服务器达成一致就可以了，假设有N台服务器，N/2 +1 就超过半数，代表大多数了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>共识算法Raft</title>
      <link>http://shanks.link/blog/2022/05/03/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95raft/</link>
      <pubDate>Tue, 03 May 2022 16:43:53 +0800</pubDate>
      <guid>http://shanks.link/blog/2022/05/03/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95raft/</guid>
      <description>&lt;p&gt;上篇讲到了「拜占庭将军问题」：多个拜占庭将军要如何在可能有叛徒、信使可能被策反或者暗杀的情况下达成是否要进攻的一致性决定？还不了解的先看看上一篇&lt;a href=&#34;https://link.jianshu.com/?t=%5Bhttps%3A%2F%2Fmp.weixin.qq.com%2Fs%2FPJvCXm9pwU-Wp3LNN7g8pQ%5D(https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FPJvCXm9pwU-Wp3LNN7g8pQ)&#34;&gt;《拜占庭将军问题》&lt;/a&gt;。这篇主要是介绍简化版拜占庭将军问题的解决方案：Raft 共识算法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>分布式系统面试知识点</title>
      <link>http://shanks.link/blog/2022/05/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E9%9D%A2%E8%AF%95%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
      <pubDate>Tue, 03 May 2022 16:33:44 +0800</pubDate>
      <guid>http://shanks.link/blog/2022/05/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E9%9D%A2%E8%AF%95%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
      <description>&lt;p&gt;本文为笔者2019年秋招面试经验总结和牛客网面经总结。大部分资源来源于网络，公众号的总结。&lt;/p&gt;&#xA;&lt;p&gt;1.CAP原则&lt;/p&gt;&#xA;&lt;p&gt;答：分布式系统有三大特性，一致性，分区容忍性和可用性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>分布式事务重复消费顺序消费</title>
      <link>http://shanks.link/blog/2022/04/24/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%A1%BA%E5%BA%8F%E6%B6%88%E8%B4%B9/</link>
      <pubDate>Sun, 24 Apr 2022 22:21:52 +0800</pubDate>
      <guid>http://shanks.link/blog/2022/04/24/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%A1%BA%E5%BA%8F%E6%B6%88%E8%B4%B9/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/6844904003877208071&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;上一期，简单的介绍了一下&lt;strong&gt;消息队列&lt;/strong&gt;的基础知识，里面有消息队列的应用场景，以及使用之后可能带来的问题，但是上期没对怎么解决这些问题做回答，因为要控制篇幅嘛（明明是自己觉得MQ写不了多少期，要多怼一期出来！渣男）&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于分布式系统共识的思考</title>
      <link>http://shanks.link/blog/2022/04/24/%E5%85%B3%E4%BA%8E%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%85%B1%E8%AF%86%E7%9A%84%E6%80%9D%E8%80%83/</link>
      <pubDate>Sun, 24 Apr 2022 22:13:24 +0800</pubDate>
      <guid>http://shanks.link/blog/2022/04/24/%E5%85%B3%E4%BA%8E%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%85%B1%E8%AF%86%E7%9A%84%E6%80%9D%E8%80%83/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.modb.pro/db/247776&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;分布式系统的挑战&#34;&gt;分布式系统的挑战&lt;/h1&gt;&#xA;&lt;p&gt;在前面的文章里，我们分析了分布式系统在业务上的一致性技术，即分布式事务，它的结果导向是面向用户的。然而在我们的系统内部，有时也需要面对来自软件架构等更高层次上的一致性要求，比如 Redis 的哨兵模式，Zookeeper 的选举过程等。它们所考虑的一致性更多的是服务节点之间一个&lt;code&gt;共识&lt;/code&gt;&#xA;的达成，当共识达成之后，就可以以此为指导原则，展开更多的协同操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于分布式事务的思考</title>
      <link>http://shanks.link/blog/2022/04/24/%E5%85%B3%E4%BA%8E%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%80%9D%E8%80%83/</link>
      <pubDate>Sun, 24 Apr 2022 22:10:50 +0800</pubDate>
      <guid>http://shanks.link/blog/2022/04/24/%E5%85%B3%E4%BA%8E%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%80%9D%E8%80%83/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.modb.pro/db/247777&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;现象&#34;&gt;现象&lt;/h1&gt;&#xA;&lt;p&gt;互联网的世界与十几年前相比，已经大不相同。以往的单体服务就可以支撑起大多数的用户需求。然而随着手机等电子产品的普及，用户想要的服务已经是越来越复杂，各种需求相互关联。而这也给软件开发带来了更多的挑战。为了应付随时会变化的代码世界，现有的开发趋势都在逐渐的化整为零。其中最具代表性的就是&lt;strong&gt;微服务&lt;/strong&gt;的流行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>秒懂消息队列</title>
      <link>http://shanks.link/blog/2022/04/24/%E7%A7%92%E6%87%82%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</link>
      <pubDate>Sun, 24 Apr 2022 18:42:37 +0800</pubDate>
      <guid>http://shanks.link/blog/2022/04/24/%E7%A7%92%E6%87%82%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.modb.pro/db/247447&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;摘要&#34;&gt;摘要&lt;/h3&gt;&#xA;&lt;p&gt;作为技术方案最常提到的组件：消息队列，它在我们的程序中起到了重要的作用。异步、解耦、削峰（缓冲）等特性正是我们选择它的原因。本文将会按自己的理解聊一聊消息队列的本质、使用场景、注意事项、以及介绍下主流的消息队列。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TiDB 源码阅读系列文章（二）初识 TiDB 源码</title>
      <link>http://shanks.link/blog/2021/09/04/tidb-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E4%BA%8C%E5%88%9D%E8%AF%86-tidb-%E6%BA%90%E7%A0%81/</link>
      <pubDate>Sat, 04 Sep 2021 16:27:11 +0000</pubDate>
      <guid>http://shanks.link/blog/2021/09/04/tidb-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E4%BA%8C%E5%88%9D%E8%AF%86-tidb-%E6%BA%90%E7%A0%81/</guid>
      <description>&lt;p&gt;申砾2018-03-02&lt;/p&gt;&#xA;&lt;p&gt;本文为 TiDB 源码阅读系列文章的第二篇， &lt;a href=&#34;https://pingcap.com/zh/blog/tidb-source-code-reading-1&#34;&gt;第一篇文章 &lt;/a&gt;介绍了 TiDB 整体的架构，知道 TiDB 有哪些模块，分别是做什么的，从哪里入手比较好，哪些可以忽略，哪些需要仔细阅读。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TiDB 源码阅读系列文章（一）序</title>
      <link>http://shanks.link/blog/2021/09/04/tidb-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E4%B8%80%E5%BA%8F/</link>
      <pubDate>Sat, 04 Sep 2021 15:32:44 +0000</pubDate>
      <guid>http://shanks.link/blog/2021/09/04/tidb-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E4%B8%80%E5%BA%8F/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://pingcap.com/zh/blog/tidb-source-code-reading-1&#34;&gt;以下内容转载自博客&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;申砾2018-02-28&lt;/p&gt;&#xA;&lt;p&gt;在 TiDB DevCon2018 上，我们对外宣布了 TiDB 源码阅读分享活动，承诺对外发布一系列文章以及视频帮助大家理解 TiDB 源码。大家一直很关心这项活动的时间，而我们忙于新版本的开发，一直不得闲。在春节放假期间，终于有时间开始动手写这个系列。&lt;/p&gt;</description>
    </item>
    <item>
      <title>分布式系统的Raft算法</title>
      <link>http://shanks.link/blog/2021/09/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84raft%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 03 Sep 2021 17:38:11 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/09/03/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84raft%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;p&gt;　　过去, Paxos一直是分布式协议的标准，但是Paxos难于理解，更难以实现，Google的分布式锁系统Chubby作为Paxos实现曾经遭遇到很多坑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>微服务架构中如何优雅地重试？</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E9%87%8D%E8%AF%95/</link>
      <pubDate>Tue, 27 Jul 2021 17:38:46 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E9%87%8D%E8%AF%95/</guid>
      <description>&lt;h1 id=&#34;字节跳动--微服务架构中如何优雅地重试&#34;&gt;字节跳动 | 微服务架构中如何优雅地重试？&lt;/h1&gt;&#xA;&lt;h1 id=&#34;背景&#34;&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;在微服务架构中，一个大系统被拆分成多个小服务，小服务之间大量 RPC 调用，经常可能因为网络抖动等原因导致 RPC 调用失败，这时候使用重试机制可以提高请求的最终成功率，减少故障影响，让系统运行更稳定。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动分布式表格存储系统的演进</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%88%86%E5%B8%83%E5%BC%8F%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%BC%94%E8%BF%9B/</link>
      <pubDate>Tue, 27 Jul 2021 17:08:00 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%88%86%E5%B8%83%E5%BC%8F%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%BC%94%E8%BF%9B/</guid>
      <description>&lt;h1 id=&#34;跳动分布式表格存储系统的演进&#34;&gt;跳动分布式表格存储系统的演进&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文选自“字节跳动基础架构实践”系列文章。&lt;/p&gt;&#xA;&lt;p&gt;“字节跳动基础架构实践”系列文章是由字节跳动基础架构部门各技术团队及专家倾力打造的技术干货内容，和大家分享团队在基础架构发展和演进过程中的实践经验与教训，与各位技术同学一起交流成长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动自研线上引流回放系统的架构演进</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E7%BA%BF%E4%B8%8A%E5%BC%95%E6%B5%81%E5%9B%9E%E6%94%BE%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/</link>
      <pubDate>Tue, 27 Jul 2021 16:56:51 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E7%BA%BF%E4%B8%8A%E5%BC%95%E6%B5%81%E5%9B%9E%E6%94%BE%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/</guid>
      <description>&lt;h1 id=&#34;字节跳动自研线上引流回放系统的架构演进&#34;&gt;字节跳动自研线上引流回放系统的架构演进&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文选自“字节跳动基础架构实践”系列文章。&lt;/p&gt;&#xA;&lt;p&gt;“字节跳动基础架构实践”系列文章是由字节跳动基础架构部门各技术团队及专家倾力打造的技术干货内容，和大家分享团队在基础架构发展和演进过程中的实践经验与教训，与各位技术同学一起交流成长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动表格存储中的事务</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E4%B8%AD%E7%9A%84%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Tue, 27 Jul 2021 16:54:59 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E4%B8%AD%E7%9A%84%E4%BA%8B%E5%8A%A1/</guid>
      <description>&lt;h1 id=&#34;表格存储中的事务&#34;&gt;表格存储中的事务&lt;/h1&gt;&#xA;&lt;h1 id=&#34;1-背景&#34;&gt;1. 背景&lt;/h1&gt;&#xA;&lt;p&gt;分布式表格存储系统在业界拥有广泛的应用场景。Google 先后发布了 Bigtable 和 Spanner 两代分布式表格存储系统，承接了其公司内部和外部云服务中的所有表格存储需求，其中 Bigtable 的开源实现 HBase 在国内外公司中都得到了广泛的使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动自研强一致在线 KV &amp;表格存储实践 - 下篇</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E5%BC%BA%E4%B8%80%E8%87%B4%E5%9C%A8%E7%BA%BF-kv-%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E5%AE%9E%E8%B7%B5-%E4%B8%8B%E7%AF%87/</link>
      <pubDate>Tue, 27 Jul 2021 16:45:17 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E5%BC%BA%E4%B8%80%E8%87%B4%E5%9C%A8%E7%BA%BF-kv-%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E5%AE%9E%E8%B7%B5-%E4%B8%8B%E7%AF%87/</guid>
      <description>&lt;h1 id=&#34;字节跳动自研强一致在线-kv-表格存储实践---下篇&#34;&gt;字节跳动自研强一致在线 KV &amp;amp;表格存储实践 - 下篇&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文选自“字节跳动基础架构实践”系列文章。&lt;/p&gt;&#xA;&lt;p&gt;“字节跳动基础架构实践”系列文章是由字节跳动基础架构部门各技术团队及专家倾力打造的技术干货内容，和大家分享团队在基础架构发展和演进过程中的实践经验与教训，与各位技术同学一起交流成长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动自研强一致在线 KV &amp;表格存储实践 - 上篇</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E5%BC%BA%E4%B8%80%E8%87%B4%E5%9C%A8%E7%BA%BF-kv-%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E5%AE%9E%E8%B7%B5-%E4%B8%8A%E7%AF%87/</link>
      <pubDate>Tue, 27 Jul 2021 16:43:26 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E5%BC%BA%E4%B8%80%E8%87%B4%E5%9C%A8%E7%BA%BF-kv-%E8%A1%A8%E6%A0%BC%E5%AD%98%E5%82%A8%E5%AE%9E%E8%B7%B5-%E4%B8%8A%E7%AF%87/</guid>
      <description>&lt;h1 id=&#34;字节跳动自研强一致在线-kv-表格存储实践---上篇&#34;&gt;字节跳动自研强一致在线 KV &amp;amp;表格存储实践 - 上篇&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文选自“字节跳动基础架构实践”系列文章。&lt;/p&gt;&#xA;&lt;p&gt;“字节跳动基础架构实践”系列文章是由字节跳动基础架构部门各技术团队及专家倾力打造的技术干货内容，和大家分享团队在基础架构发展和演进过程中的实践经验与教训，与各位技术同学一起交流成长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动自研万亿级图数据库 &amp; 图计算实践</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E4%B8%87%E4%BA%BF%E7%BA%A7%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9B%BE%E8%AE%A1%E7%AE%97%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 27 Jul 2021 16:39:57 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E8%87%AA%E7%A0%94%E4%B8%87%E4%BA%BF%E7%BA%A7%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%9B%BE%E8%AE%A1%E7%AE%97%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h1 id=&#34;跳动自研万亿级图数据库--图计算实践&#34;&gt;跳动自研万亿级图数据库 &amp;amp; 图计算实践&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文选自“字节跳动基础架构实践”系列文章。&lt;/p&gt;&#xA;&lt;p&gt;“字节跳动基础架构实践”系列文章是由字节跳动基础架构部门各技术团队及专家倾力打造的技术干货内容，和大家分享团队在基础架构发展和演进过程中的实践经验与教训，与各位技术同学一起交流成长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动混沌工程实践总结</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E6%B7%B7%E6%B2%8C%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 27 Jul 2021 15:34:27 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E6%B7%B7%E6%B2%8C%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h2 id=&#34;字节跳动混沌工程实践总结&#34;&gt;字节跳动混沌工程实践总结&lt;/h2&gt;&#xA;&lt;p&gt;原创 基础架构团队 &lt;a href=&#34;javascript:void(0);&#34;&gt;字节跳动技术团队&lt;/a&gt; &lt;em&gt;2020-04-27&lt;/em&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文选自“字节跳动基础架构实践”系列文章。&lt;/p&gt;&#xA;&lt;p&gt;“字节跳动基础架构实践”系列文章是由字节跳动基础架构部门各技术团队及专家倾力打造的技术干货内容，和大家分享团队在基础架构发展和演进过程中的实践经验与教训，与各位技术同学一起交流成长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>字节跳动 EB 级 HDFS 实践</title>
      <link>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8-eb-%E7%BA%A7-hdfs-%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 27 Jul 2021 15:23:52 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/27/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8-eb-%E7%BA%A7-hdfs-%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h2 id=&#34;字节跳动-eb-级-hdfs-实践&#34;&gt;字节跳动 EB 级 HDFS 实践&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文选自“字节跳动基础架构实践”系列文章。&lt;/p&gt;&#xA;&lt;p&gt;“字节跳动基础架构实践”系列文章是由字节跳动基础架构部门各技术团队及专家倾力打造的技术干货内容，和大家分享团队在基础架构发展和演进过程中的实践经验与教训，与各位技术同学一起交流成长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>亿级系统的Redis缓存如何设计???</title>
      <link>http://shanks.link/blog/2021/07/05/%E4%BA%BF%E7%BA%A7%E7%B3%BB%E7%BB%9F%E7%9A%84redis%E7%BC%93%E5%AD%98%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Mon, 05 Jul 2021 20:24:32 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/07/05/%E4%BA%BF%E7%BA%A7%E7%B3%BB%E7%BB%9F%E7%9A%84redis%E7%BC%93%E5%AD%98%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</guid>
      <description>&lt;h2 id=&#34;亿级系统的redis缓存如何设计&#34;&gt;亿级系统的Redis缓存如何设计？？？&lt;/h2&gt;&#xA;&lt;p&gt;以下文章来源于微观技术 ，作者TomGE&lt;/p&gt;&#xA;&lt;p&gt;缓存设计可谓老生常谈了，早些时候都是采用&lt;code&gt;memcache&lt;/code&gt;，现在大家更多倾向使用&lt;code&gt;redis&lt;/code&gt;，除了知晓常用的数据存储类型，结合业务场景有针对性选择，好像其他也没有什么大的难点。&lt;/p&gt;</description>
    </item>
    <item>
      <title>分布式锁实现原理与最佳实践</title>
      <link>http://shanks.link/blog/2021/06/15/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 15 Jun 2021 19:57:11 +0800</pubDate>
      <guid>http://shanks.link/blog/2021/06/15/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h2 id=&#34;分布式锁实现原理与最佳实践&#34;&gt;分布式锁实现原理与最佳实践&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;分布式锁应用场景&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;很多应用场景是需要系统保证幂等性的（如api服务或消息消费者），并发情况下或消息重复很容易造成系统重入，那么分布式锁是保障幂等的一个重要手段。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
