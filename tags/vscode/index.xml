<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vscode on 愿星光伴随你左右</title>
    <link>http://shanks.link/tags/vscode/</link>
    <description>Recent content in Vscode on 愿星光伴随你左右</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 24 Jan 2024 12:01:48 +0800</lastBuildDate>
    <atom:link href="http://shanks.link/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VSCode添加全局宏定义</title>
      <link>http://shanks.link/blog/2024/01/24/vscode%E6%B7%BB%E5%8A%A0%E5%85%A8%E5%B1%80%E5%AE%8F%E5%AE%9A%E4%B9%89/</link>
      <pubDate>Wed, 24 Jan 2024 12:01:48 +0800</pubDate>
      <guid>http://shanks.link/blog/2024/01/24/vscode%E6%B7%BB%E5%8A%A0%E5%85%A8%E5%B1%80%E5%AE%8F%E5%AE%9A%E4%B9%89/</guid>
      <description>&lt;h3 id=&#34;问题&#34;&gt;问题：&lt;/h3&gt;&#xA;&lt;p&gt;利用&lt;a href=&#34;https://so.csdn.net/so/search?q=vscode&amp;amp;spm=1001.2101.3001.7020&#34;&gt;vscode&lt;/a&gt;编辑代码时，设置了禁用非活动区域着色后，在一些编译脚本中配置的宏又识别不了&lt;/p&gt;&#xA;&lt;p&gt;遇到#ifdef包住的代码就会变暗色，想查看代码不是很方便。如下图：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://shanks.link/img/it/20210126110447501.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;解决&#34;&gt;解决：&lt;/h3&gt;&#xA;&lt;p&gt;在vscode中添加全局宏定义。&lt;/p&gt;&#xA;&lt;h3 id=&#34;步骤&#34;&gt;步骤：&lt;/h3&gt;&#xA;&lt;p&gt;1.ctrl+shift+p，选择对应的编辑配置，比如c/c++的，进入文件c_cpp_properties.json&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCode远程调试linux程序</title>
      <link>http://shanks.link/blog/2023/04/26/vscode%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95linux%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Wed, 26 Apr 2023 20:45:48 +0800</pubDate>
      <guid>http://shanks.link/blog/2023/04/26/vscode%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95linux%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1726411&#34;&gt;以下内容转载自&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近在Linux上调程序，但是gdb使用属于入门阶段，主要是没有图形化界面直观。在网上查找了有两个方案可选，一个是通过VisualStudio2019的远程调试功能，因为最近一7直在用VScode，所以没有试，之后有时间了可以试一下。另一个方案就是通过VScode的Remote Development插件（微软官方提供的）进行远程调试。本文介绍下这个方案。 虽然网上也有其他的文章进行介绍，但是都是写的成功的情况，没有写出来过程遇到的问题，而且有些地方不太清楚。所以我觉得自己写一个。另外请大家注意的是，&lt;strong&gt;这篇文档介绍的是远程调试，并不介绍远程编译&lt;/strong&gt;，远程调试VScode也是支持的，但是我目前不需要，后续如果需要再做配置，而且我的项目需要使用cmake及make进行编译，并不是直接用g++编译，所以也没有开始配置。 VScode的远程调试是利用gdbserver的机制进行的。大体原理是通过在Windows上或者其他图形化系统上的VScode，使用Remote Development插件进行ssh连接到远程Linux上，然后通过gdbserver提供的连接进行远程调试。下面开始介绍具体配置方式。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
